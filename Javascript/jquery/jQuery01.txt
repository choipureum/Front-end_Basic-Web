< jQuery 라이브러리 >

 - http://jquery.com 에서 다운로드 받아서 사용 (uncompressed,버전 사용)

 - 자바스크립트의 DOM을 쉽게 사용하기 위해 만들어진 라이브러리

 - 순수 자바스크립트 코드보다 효율적이고, 코드 생산성이 향상된다

 - HTML 노드, 스타일, 속성, 이벤트 등을 다룰 수 있다

 - CSS 선택자(Selector)를 이용하여 DOM객체를 관리한다

< jQuery 주요 기능 >

 - jQuery DOM : DOM 모델 (객체)를 다루는 기능

 - jQuery Event : Event를 다루는 기능


 - jQuery Ajax : 비동기통신(Ajax)를 다루는 기능


 - jQuery Effect : 효과(애니메이션 등)

 - jQuery plugin : 플러그인(추가기능) 


< jQuery 버전별 특징 >

 - 1.x
	다양한 브라우저에 호환되도록 만들어진 버전 (크로스 브라우징)
	최대한 많은 브라우저에서 호환되도록 하는 게 목적인 버전
	브라우저의 특성에 맞는 고유한 동작을 생략시킨 경우가 많음	
	소스코드의 양이 많아져 라이브러리 파일의 용량이 큰 편

 - 2.x(기본)
	성능향상, 다양한 기능들을 제공하기 위해서 IE 8 이하는 지원하지 않는다
	옛날 브라우저에 맞춘 코드를 버리고 경량화, 성능 개선
	새로운 기능도 추가함		

 - 3.x
	2.x의 업그레이드 버전
	jQuery Migrate 버전은 1.x의 업그레이드 버전
	

< CDN , Content Delivery Network >

 - 자주 사용되는 컨텐츠(자료파일, 이미지, 라이브러리파일 등등)을 네트워크 중간중간에 컨텐츠서버를 두고 복사해둔다

 - 클라이언트 요청을 받으면 적절한 위치의 컨텐츠 서버와 통신하게끔 만들어주는 시스템

 - 컨텐츠(자료)들을 효율적으로 전달하기 위해서 미리 준비해놓은 네트워크

 - 주로 10MB 이상의 파일(자료)들을 다루었지만 요즘엔 크기에 상관없이 사용한다

 - 클라이언트의 컨텐츠 요청으로 발생하는 서버의 병목현상을 해결한다

 - 서버의 불필요한 트래픽을 줄이고 반복작업을 줄여준다


< jQuery 2.2.4 min 버전 CDN >

 - <script type="text/javascript" src="https://code.jquery.com/jquery-2.2.4.min.js" ></script>

< jQuery API >

< jQuery Core >

 - jQuery 문법이 적용되었음을 알리는 키워드

 - jQuery

 - $
	ex) //document.getElementById("idname") 같은 코드
		= jQuery("#idname") 
		= $("#idname")

 - jQuery Core 키워드는 변수에 저장하여 사용할 수 있다
	ex) var J = jQuery;
	    J("#idname")
	    
< jQuery 스타일의 DOM 객체 이용 코드 >

	$(document).ready(function(){
	//DOM객체 접근 가능
	});

< jQuery 노드객체 찾기(얻어오기) >

 - $("CSS셀렉터")

 - $(jsDOM 객체)

 	** 순수 JS API를 적용할 수 있는 객체를 jsDOM객체
	** jQuery API를 적용할 수 있는 객체를 jqDOM객체

	** 순수 JS API를 사용할 수 있는 DOM객체와 jQuery API를 사용할 수 있는 DOM객체의 형식이 다르다
