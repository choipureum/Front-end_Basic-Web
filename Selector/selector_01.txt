**중요**
< id, class 속성 >
	
	- Global Attribute 공용속성이다
	(모든 태그들이 다 가지고 있는 속성)

	- id 속성
	 	HTML문서에서 각 요소들을 구분하기 위해 사용한다
		HTML문서에서 id들은 고유한 값으로 부여되어야 한다
		CSS를 적용하거나 JS Event 처리코드를 적용할 때 사용한다

		#기호와 연계해서 사용한다
		
		
	- class 속성
		태그들을 그룹지을 때 사용한다
		여러 태그 요소들에게 같은 클래스 값을 적용하여 같은 그룹으로 표현한다
		같은 클래스 값을 가진 태그들에게 공통적인 스타일을 적용할 수 있다
		ex) <div class="red"></div>
		    <p class="red"></p>

			-> "red"라는 이름으로 같은 스타일을 부여할 수 있다
		"." 기호를 이용하여 표현한다
		띄어쓰기로 구분하여 여러 값을 부여할 수 있다
		ex) <div class="red content extra"></div> : .red  .content  .extra  다 적용

***중요!
< 선택자, Selector >

 - HTML 문서에서 특정 요소를 선택하는 CSS문법
 - 선택한 요소들에게 일괄적으로 같은 스타일을 적용할 수 있다
 - jQuery -> CSS Selector

 	+ 선택자의 종류(앞에 붙는 기호차이)

		- 전체 선택자
			*{ 스타일시트;}
		- 태그 선택자
			tagName{}

		- id 선택자
			#idName{}

		- class 선택자
			.className{}

 - 복합 선택자
	둘 이상의 선택자를 복합적으로 사용하는 선택자
	선택자에 포함된 요소들의 관계를 따져 태그들을 선택한다

	1. 하위(자손) 선택자 - Descendent(자손 모두포함)
		E F : E의 하위요소인 F를 선택한다(띄어쓰기로 구분한다)
		
		ex) div p{} : 
		div요소의 자손 중 모든 p태그요소 선택

		ex)#board .title {} :
		id가 board인 요소의 자손 중 class가 title인 모든 요소

	2. 자식 선택자 - Child(바로 밑에있는 직계자손만)
		E>F : E요소의  자식인 F요소 전부 선택

	3. 형제 선택자 - Sibling(같은 부모를 공유하고 있는 요소들)

		E + F : E요소의 인접 형제 F요소(E요소의 바로 뒤에오는 F요소 한개)

		E ~ F : E요소의 일반 형제 F요소(E요소를 뒤따르는 모든 F요소 전부)

 - 속성 선택자
	요소의 속성(Attribute)를 이용하여 선택하는 선택자
	E[attr] : attr속성을 가지고 있는 E 요소를 전부선택

	E[attr="val"] : attr 속성의 값이 "val"과 같은 E요소를 선택
	(속성의 값이 완전 일치해야함, 띄어쓰기 까지 전부)

	E[attr~="val"] : attr 속성의 값이 "val"을 완전 포함하는 E요소를 선택	
	(띄어쓰기로 구분된 단어와 같은 값이면 선택됨)
	
	/*신규 추가 선택자 4종류*/
	
	E[attr^="val"] : attr속성의 값이 "val"로 시작하는 E요소 선택

	E[attr$="val"] : attr속성의 값이 "val"로 끝나는 E요소 선택

	E[attr*="val"] : attr속성의 값이 "val"을 부분 포함하는 E요소 선택
	
	E[attr|="val"] : attr속성의 값이 "val"과 같거나 "val-"로 시작하는 E요소


 - 가상 선택자, Psuedo Selector(의사 선택자) : 가짜로 꾸며낸 코드
	ex) 반복(1~100){ 반복값 출력;}
	HTML 문서에 실제 요소에는 존재하지 않는 대상을 선택한다
	이벤트기반, 특정 순서기반 선택자가 있다

	1. 가상 클래스 선택자(이벤트 기반)
		
		:hover 	- onmouseover 이벤트에 반응하여 선택(마우스 올렸다뗏다)

		:active - onmousedown 이벤트에 반응하여 선택(마우스를 누르면,클릭) 

		:link - <a>태그의 방문 전 상태
		:visited -<a> 태그의 방분 후 상태

		:enable - 활성화(enable)상태인 요소
		:disable - 비활성화상태인 요소
			-->focus를 가질 수 있는 상태인지 판단해서 선택

		:checked - checked상태인 요소(checkbox, radio)
		
		:focus - onfocus 상태인 요소(focus를 가지고 있는 요소)

		:empty - 컨텐츠가 비어있는 요소, 자식요소가 없는 대상을 선택
	
	2. 가상 클래스 선택자(순서 기반)
		
		:root - 최상위 태그, <html> 태그
		
		:nth-child(n) - 앞에서부터 n번째 요소(n)ex)nth-child(1)
		:nth-last-child(n) - 뒤에서부터 n번째 요소

		:first-child - 첫번째 요소
		:last-child - 마지막 요소

		:only-child - 유일한 자식(형제요소가 없을 때)
		:only-of-type - 유일한 태그 타입(형제 요소가 있더라도 단독타입일때)
		
	3. 가상 요소 선택자	
	
		::before - 태그 요소의 앞에 가상요소 추가
		::after - 태그 요소의 뒤에 가상요소 추가

		::first-line - 요소의 첫번째 줄
		::first-letter - 요소의 첫번째 글자


 - 부정선택자

	:not(S) - 조건 S를 만족하지 않는 요소
	(S는 Selector를 이용하여 작성한다)

	ex) :not(ul) - ul태그가 아닌요소

 < CSS스타일 적용 우선순위 >

	- 선택자 우선순위
		1. 아이디 선택자
		2. 클래스/속성/가상 선택자
		3. 태그 선택자
		4. 전체 선택자		

 	- 스타일 적용방법에 따른 우선순위
		1. !important
		2. 인라인
		3. 임베디드
		4. @import
		5. <link>
		6. <link>안에 적용된 @import (이건 적용하지 않는게 좋다)
		7. 브라우저 기본스타일
		
	


	
	
	
	
	


