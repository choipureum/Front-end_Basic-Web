< DOM, Document Object Model >

 - 문서 객체 모델
 - document 객체를 통해 관리된다
 - document 객체는 window 객체의 내장 객체 중 하나
 
 - HTML 문서의 <body>태그의 내용 요소들을 다룰 수 있다
 - 자바스크립트 코드로 HTML문서의 요소(태그)들에 접근하고 관리할 수 있게 해주는 객체 모델
 
 < DOM 관련 용어 >

 - 요소(Element) 
 	HTML문서 내의 태그
 
 - 문서 객체(Document Object) 
	자바스크립트 코드를 이용하여 요소에 접근할 수 있도록 객체화한 것
	HTML 요소와 자바스크립트코드의 연결지점(인터페이스)

 - DOM 트리(Tree)
	모든 문서 객체들을 트리구조로 표현한 것
	모든 요소들을 계층적 구조인 트리 구조로 저장해 둔 것
	
 	- 노드, Node
		Dom트리의 구성 요소
		
		요소 노드 : 태그
		텍스트 노드 : 태그가 감싸고 있는 텍스트

		ex) <h1>Hello</h1>

		    <h1>- 요소 노드
		    "Hello" - 텍스트노드

< DOM객체를 사용하는 코드를 적용하는 방법 >

 - document객체는 <body>태그의 모든 계층그조(태그들의 관계)를 파악해서 DOM트리를 완성시킨 이후에 사용해야한다
 - DOM트리가 완성되는 시점까지 document객체를 사용하는 코드가 실행되지 않도록 코드실행 시점을 미뤄야한다

 - 방법1
	</body>닫는 태그 바로 위에 <script>태그 작성 후 사용하기
 - 방법2
	<head>태그 내 <script> 태그에서 window.onload 리스너(이벤트리스너)에서 사용
 - 방법3
	일반함수로 document객체를 사용하고 해당 함수를 태그요소의 이벤트리스너로 사용(등록)하기

< DOM 객체 함수, DOM API >

< Node 생성 >

 - document.createElement("tagName");
	요소 노드 만들기

	** HTML 표준태그가 아니어도 생성됨

 - document.createTextNode("text");
	텍스트 노드 만들기

< Node 추가 >

 - DOM 객체.appendChild(대상객체)
	DOM객체에 대상객체를 연결한다(자식으로 추가한다)

 	ex) var pTag = document.createElement("p") //p태그요소생성
	    document.body.appendChild(pTag) //<body>요소 추가

		** document.body == <body>

	ex) var div = document.createElement("div") //div요소 생성
	    var t = document.createTextNode("Hello") //텍스트 생성

	    div.appendChild(t) //<div>에 텍스트 추가하기
	    document.body.appendChild(div) //<body>에 <div>추가하기
	    ** document.body에 추가해야 화면에서 보임










